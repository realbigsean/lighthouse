name: docker

on:
    push:
        branches:
            - master
        tags:
            - '*'

jobs:
    build-docker-arm64:
        runs-on: ubuntu-18.04
        steps:
            - uses: actions/checkout@v1
            - name: Dockerhub login
              env:
                  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
                  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
              run: |
                  echo "${DOCKER_PASSWORD}" | docker login --username ${DOCKER_USERNAME} --password-stdin
            - uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
            - name: Cross build lighthouse binary
              uses: actions-rs/cargo@v1
              with:
                  use-cross: true
                  command: build
                  args: --release --manifest-path lighthouse/Cargo.toml --target aarch64-unknown-linux-gnu --features portable
            - name: Cross build lcli binary
              uses: actions-rs/cargo@v1
              with:
                  use-cross: true
                  command: build
                  args: --release --manifest-path lcli/Cargo.toml --target aarch64-unknown-linux-gnu --features portable
            - name: Move cross-built ARM binaries into Docker scope
              run: |
                  mkdir ./bin;
                  mv ./target/aarch64-unknown-linux-gnu/release/lighthouse ./bin;
                  mv ./target/aarch64-unknown-linux-gnu/release/lcli ./bin;
            - name: Build Docker Buildx
              run: |
                  export DOCKER_BUILDKIT=1;
                  docker build --platform=local -o . git://github.com/docker/buildx;
                  mkdir -p ~/.docker/cli-plugins;
                  mv buildx ~/.docker/cli-plugins/docker-buildx;
            - name: Create Docker Builder
              run: |
                  docker run --rm --privileged multiarch/qemu-user-static --reset -p yes;
                  docker context create builder;
                  docker buildx create --use --name lighthouse builder;
            - name: Set Env Release
              if: startsWith( github.ref, 'refs/tags/')
              run: echo "ARM64_TAG=latest-arm64" >> $GITHUB_ENV
            - name: Set Env Non-release
              if: !startsWith( github.ref, 'refs/tags/')
              run: echo "ARM64_TAG=latest-arm64-unstable" >> $GITHUB_ENV
            - name: Build ARM64 dockerfile (with push)
              run: |
                  docker buildx build \
                      --platform=linux/arm64 \
                      --output "type=image,push=true" \
                      --file ./Dockerfile.cross . \
                      --tag seananderson33/lighthouse:$ARM64_TAG
    build-docker-amd64:
        runs-on: ubuntu-18.04
        steps:
            - uses: actions/checkout@v1
            - name: Dockerhub login
              env:
                  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
                  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
              run: |
                  echo "${DOCKER_PASSWORD}" | docker login --username ${DOCKER_USERNAME} --password-stdin
            - name: Set Env Release
              if: startsWith( github.ref, 'refs/tags/')
              run: echo "AMD64_TAG=latest-amd64" >> $GITHUB_ENV
            - name: Set Env Non-release
              if: !startsWith( github.ref, 'refs/tags/')
              run: echo "AMD64_TAG=latest-amd64-unstable" >> $GITHUB_ENV
            - name: Build AMD64 dockerfile (with push)
              run: |
                  docker build \
                      --build-arg PORTABLE=true \
                      --output "type=image,push=true" \
                      --file ./Dockerfile . \
                      --tag seananderson33/lighthouse:$AMD64_TAG
    build-docker-multiarch:
        runs-on: ubuntu-18.04
        needs: [build-docker-arm64, build-docker-amd64]
        steps:
            - name: Dockerhub login
              env:
                  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
                  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
              run: |
                  echo "${DOCKER_PASSWORD}" | docker login --username ${DOCKER_USERNAME} --password-stdin
            - name: Set Env Release
              if: startsWith( github.ref, 'refs/tags/')
              run: |
                echo "ARM64_TAG=latest-arm64" >> $GITHUB_ENV;
                echo "AMD64_TAG=latest-amd64" >> $GITHUB_ENV;
                echo "LATEST_TAG=latest" >> $GITHUB_ENV;
            - name: Set Env Non-release
              if: !startsWith( github.ref, 'refs/tags/')
              run: |
                echo "ARM64_TAG=latest-arm64-unstable" >> $GITHUB_ENV;
                echo "AMD64_TAG=latest-amd64-unstable" >> $GITHUB_ENV;
                echo "LATEST_TAG=latest-unstable" >> $GITHUB_ENV;
            - name: Create and push multiarch manifest
              # We need to enable experimental docker features in order to use `docker manifest`
              run: |
                  echo '{"experimental": true}' | sudo tee -a /etc/docker/daemon.json;
                  sudo systemctl restart docker;
                  docker manifest create seananderson33/lighthouse:$LATEST_TAG \
                      --amend seananderson33/lighthouse:$ARM64_TAG \
                      --amend seananderson33/lighthouse:$AMD64_TAG;
                  docker manifest push seananderson33/lighthouse:LATEST_TAG